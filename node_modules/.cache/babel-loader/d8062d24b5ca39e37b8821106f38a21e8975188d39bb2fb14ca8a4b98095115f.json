{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jenny\\\\CS_Projects\\\\CreateX-Capstone-Design\\\\src\\\\pages\\\\Map\\\\map.js\",\n  _s = $RefreshSig$();\n// src/pages/MapPage.js\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stops = [{\n  name: \"Stop 1\",\n  location: {\n    lat: 40.715,\n    lng: -74.012\n  },\n  radius: 200\n}, {\n  name: \"Stop 2\",\n  location: {\n    lat: 40.725,\n    lng: -74.002\n  },\n  radius: 200\n}, {\n  name: \"Stop 3\",\n  location: {\n    lat: 40.721,\n    lng: -74.007\n  },\n  radius: 100\n}\n// Add more stops as needed\n];\nfunction MapPage() {\n  _s();\n  useEffect(() => {\n    // Load the Google Maps API script dynamically\n    const script = document.createElement(\"script\");\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBnBuUdTjkuJ60xB5HeoS5uivE-ejRg4kg&libraries=places,geometry\";\n    script.async = true;\n    script.onload = () => {\n      // Initialize the map after the script is loaded\n      initMap();\n    };\n    document.body.appendChild(script);\n\n    // Function to initialize the map\n    function initMap() {\n      const map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat: 40.7128,\n          lng: -74.0060\n        },\n        // Initial map center\n        zoom: 12\n      });\n\n      // Add stops and discover neighborhoods for each stop\n      stops.forEach(stop => {\n        addStop(map, stop);\n        discoverNeighborhood(map, stop);\n      });\n    }\n\n    // Function to add markers and circles for each scavenger hunt stop\n    function addStop(map, stop) {\n      const marker = new google.maps.Marker({\n        position: stop.location,\n        map: map,\n        title: stop.name\n      });\n      const circle = new google.maps.Circle({\n        map: map,\n        center: stop.location,\n        radius: stop.radius,\n        // Radius in meters\n        fillColor: \"#FF0000\",\n        fillOpacity: 0.3,\n        strokeColor: \"#FF0000\",\n        strokeOpacity: 0.8,\n        strokeWeight: 2\n      });\n      marker.addListener(\"click\", () => {\n        alert(`Welcome to ${stop.name}! Start your scavenger hunt!`);\n      });\n    }\n\n    // Optional: Function to discover nearby places of interest around each stop\n    function discoverNeighborhood(map, stop) {\n      const service = new google.maps.places.PlacesService(map);\n      const request = {\n        location: stop.location,\n        radius: stop.radius,\n        type: [\"landmark\"] // Adjust type (e.g., \"park\", \"museum\") as needed\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          results.forEach(place => {\n            new google.maps.Marker({\n              position: place.geometry.location,\n              map: map,\n              title: place.name,\n              icon: {\n                url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n              }\n            });\n          });\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n}\n_s(MapPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","stops","name","location","lat","lng","radius","MapPage","_s","script","document","createElement","src","async","onload","initMap","body","appendChild","map","google","maps","Map","getElementById","center","zoom","forEach","stop","addStop","discoverNeighborhood","marker","Marker","position","title","circle","Circle","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","addListener","alert","service","places","PlacesService","request","type","nearbySearch","results","status","PlacesServiceStatus","OK","place","geometry","icon","url","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jenny/CS_Projects/CreateX-Capstone-Design/src/pages/Map/map.js"],"sourcesContent":["// src/pages/MapPage.js\r\nimport React, { useEffect } from \"react\";\r\n\r\nconst stops = [\r\n  { name: \"Stop 1\", location: { lat: 40.715, lng: -74.012 }, radius: 200 },\r\n  { name: \"Stop 2\", location: { lat: 40.725, lng: -74.002 }, radius: 200 },\r\n  { name: \"Stop 3\", location: { lat: 40.721, lng: -74.007 }, radius: 100 },\r\n  // Add more stops as needed\r\n];\r\n\r\nfunction MapPage() {\r\n  useEffect(() => {\r\n    // Load the Google Maps API script dynamically\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBnBuUdTjkuJ60xB5HeoS5uivE-ejRg4kg&libraries=places,geometry\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      // Initialize the map after the script is loaded\r\n      initMap();\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    // Function to initialize the map\r\n    function initMap() {\r\n      const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        center: { lat: 40.7128, lng: -74.0060 }, // Initial map center\r\n        zoom: 12,\r\n      });\r\n\r\n      // Add stops and discover neighborhoods for each stop\r\n      stops.forEach(stop => {\r\n        addStop(map, stop);\r\n        discoverNeighborhood(map, stop);\r\n      });\r\n    }\r\n\r\n    // Function to add markers and circles for each scavenger hunt stop\r\n    function addStop(map, stop) {\r\n      const marker = new google.maps.Marker({\r\n        position: stop.location,\r\n        map: map,\r\n        title: stop.name,\r\n      });\r\n\r\n      const circle = new google.maps.Circle({\r\n        map: map,\r\n        center: stop.location,\r\n        radius: stop.radius, // Radius in meters\r\n        fillColor: \"#FF0000\",\r\n        fillOpacity: 0.3,\r\n        strokeColor: \"#FF0000\",\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n      });\r\n\r\n      marker.addListener(\"click\", () => {\r\n        alert(`Welcome to ${stop.name}! Start your scavenger hunt!`);\r\n      });\r\n    }\r\n\r\n    // Optional: Function to discover nearby places of interest around each stop\r\n    function discoverNeighborhood(map, stop) {\r\n      const service = new google.maps.places.PlacesService(map);\r\n      const request = {\r\n        location: stop.location,\r\n        radius: stop.radius,\r\n        type: [\"landmark\"], // Adjust type (e.g., \"park\", \"museum\") as needed\r\n      };\r\n\r\n      service.nearbySearch(request, (results, status) => {\r\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n          results.forEach(place => {\r\n            new google.maps.Marker({\r\n              position: place.geometry.location,\r\n              map: map,\r\n              title: place.name,\r\n              icon: { url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\" },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return <div id=\"map\" style={{ height: \"500px\", width: \"100%\" }}></div>;\r\n}\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}